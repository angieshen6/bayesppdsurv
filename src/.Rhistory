a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=-2, to=4, lwd = 3,
xlab = "mu", ylab = "Density")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
pdf("KL_normal_vary_n.pdf", width=20, height=15)
N0 <- n0 <- 50
k <- 1
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
pdf("KL_normal_vary_n.pdf", width=20, height=15)
N0 <- n0 <- 50
k <- 0.8
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
pdf("KL_normal_vary_n.pdf", width=20, height=15)
N0 <- n0 <- 50
k <- 0.5
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
pdf("KL_normal_vary_n.pdf", width=20, height=15)
N0 <- n0 <- 50
k <- 0.6
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
pdf("KL_normal_vary_n.pdf", width=20, height=15)
N0 <- n0 <- 50
k <- 0.55
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density",main="d_opt=0.55, n0=50")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
pdf("KL_normal_vary_n.pdf", width=20, height=15)
N0 <- n0 <- 50
k <- 0.55
par(mfrow=c(4,5))
for(N in c(30,50,70,90)){
#for(k in c(0.1,0.2,0.3,0.4)){
op <- optim(par=c(0, 0), fn=KL_integrate, c=c, delta=delta, k=k, N=N, N0=N0,sigma_squared=sigma_squared)
a0 <- round(exp(op$par[1]),1)
b0 <- round(exp(op$par[2]),1)
curve(dnorm(x,y0_bar, sd=sqrt(sigma_squared/N)), from=0, to=4, lwd = 3,
xlab = "mu", ylab = "Density",main="d_opt=0.55, n0=50")
curve(dnorm(x,y0_bar+k, sd=sqrt(sigma_squared/N)), lwd = 3, col = 4, add = TRUE)
legend(x = "topleft",
legend = c("historical likelihood", "current likelihood"),
col = c(1,4), lwd = 2, lty = c(1, 1), bty = 'n',cex=0.7)
for(l in c(0,0.5,1,1.5)){
#for(l in c(0,0.2,0.3,0.4)){
y_bar <- y0_bar+l
curve(dbeta(x, c, 1), lwd = 3,
xlab = expression(a[0]), ylab = "Density",main=paste(paste0("n=",N),paste0("d_obs=",l),paste0("alpha0=",a0),paste0("beta0=",b0),sep=", "))
curve(dbeta(x, 1, c), lwd = 3, col = 4, add = TRUE)
curve(dbeta(x, a0, b0), lwd = 3, col = 7, lty = 2, add=TRUE)
logConst.quad <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = a0, beta0 = b0, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = a0, beta0 = b0, logZ = logConst.quad,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = 8, lty = 2, add=TRUE)
logConst.unif <- log(integrate(p_a0_unnorm, 0, 1,
alpha0 = 1, beta0 = 1, y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared)$value)
curve(posterior_a0(x, alpha0 = 1, beta0 = 1, logZ = logConst.unif,
y_bar=y_bar, N=N, N0=N0, sigma_squared=sigma_squared), lwd = 3, col = "#FFA500", lty = 2, add=TRUE)
legend("top",
legend = c("Beta(c, 1)", "Beta(1, c)", "optimal prior", "posterior(optimal)", "posterior(uniform)"),
col = c(1,4,7,8,	"#FFA500"), lwd = 2, lty = c(1, 1, 2, 2, 2), bty = 'n', cex=0.8)
}
}
dev.off()
results
lambda <- list(rpois(n.intervals[1],2))
res <- PCH(time, event, X, S, historical=list(), n.intervals)
PE_ll(res$curr_tables, list(), 0)
a <- res$curr_tables
a$evt_table
a0 <- c(0.3,0.7)
result <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=10000, nBI=0, dCurrent0=TRUE)
lambda
n.intervals[1]
res <- PCH(time, event, X, S, historical=list(), n.intervals)
lambda <- list(rpois(n.intervals[1],2))
res <- PCH(time, event, X, S, historical=list(), n.intervals)
PE_ll(res$curr_tables, list(), 0)
a <- res$curr_tables
a$evt_table
a0 <- c(0.3,0.7)
result <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=10000, nBI=0, dCurrent0=TRUE)
n.intervals
lambda
set.seed(1)
lambda <- list(rpois(n.intervals[1],2))
res <- PCH(time, event, X, S, historical=list(), n.intervals)
PE_ll(res$curr_tables, list(), 0)
a <- res$curr_tables
a$evt_table
a0 <- c(0.3,0.7)
result <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=10000, nBI=0, dCurrent0=TRUE)
lambda
View(X)
result <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=1, nBI=0, dCurrent0=TRUE)
PE_ll(res$curr_tables, list(), 0)
PE_ll <- function(curr_tables, hist_tables, a0_vec){
ll <- 0
# current data likelihood
for(s in 1:Sn){
et <- curr_tables$evt_table[[s]]
rt <- curr_tables$rt_table[[s]]
for(j in 1:n.intervals[s]){
ll <- ll + sum(et[,P+j]) * log(lambda[[s]][j]) - lambda[[s]][j] *
sum(exp(as.matrix(rt[,1:P])%*% beta) * rt[,P+j])
}
et_sum <- rowSums(et[,(P+1):(P+n.intervals[s])])
ll <- ll + sum((as.matrix(et[,1:P]) %*% beta) * et_sum)
}
# historical data likelihood
if(length(hist_tables)!=0){
for(k in 1:length(hist_tables)){
histdata <- hist_tables[[k]]
a0 <- a0_vec[k]
for(s in 1:Sn){
et <- histdata$evt_table[[s]]
rt <- histdata$rt_table[[s]]
for(j in 1:n.intervals[s]){
ll <- ll + a0*(sum(et[,P+j]) * log(lambda[[s]][j]) - lambda[[s]][j] *
sum(exp(as.matrix(rt[,1:P])%*% beta) * rt[,P+j]))
}
et_sum <- rowSums(et[,(P+1):(P+n.intervals[s])])
ll <- ll + a0*(sum(as.matrix(et[,1:P]) %*% beta * et_sum))
}
}
}
return(ll)
}
# R
PE_ll(res$curr_tables, list(), 0)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
beta
View(X)
s=1
et <- curr_tables$evt_table[[s]]
rt <- curr_tables$rt_table[[s]]
rt[,1:P]
P=1
rt[,1:P]
############################ likelihood ##############################
curr_tables <- res$curr_tables
hist_tables <- res$hist_tables
et <- curr_tables$evt_table[[s]]
rt <- curr_tables$rt_table[[s]]
as.matrix(rt[,1:P])
View(a)
sum(X*0.5*event)
X*0.5
event
et <- curr_tables$evt_table[[s]]
View(et)
rt <- curr_tables$rt_table[[s]]
P <- 1
et_sum <- rowSums(et[,(P+1):(P+n.intervals[s])])
et_sum
et[,1:P]
et_sum <- rowSums(et[,(P+1):(P+n.intervals[s])])
sum((as.matrix(et[,1:P]) %*% beta) * et_sum)
sum((X %*% beta) * et_sum)
cbind(1,as.matrix(rt[,1:P]))
cbind(1,as.matrix(et[,1:P]))
beta <- c(0,1)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=1, nBI=0, dCurrent0=TRUE)
set.seed(1)
pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=1, nBI=0, dCurrent0=TRUE)
set.seed(1)
pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=1, nBI=0, dCurrent0=TRUE)
beta <- c(0.2655,0.3721)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
set.seed(1)
lambda <- list(rpois(n.intervals[1],2))
res <- PCH(time, event, X, S, historical=list(), n.intervals)
set.seed(1)
pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=1, nBI=0, dCurrent0=TRUE)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
PE_ll <- function(curr_tables, hist_tables, a0_vec){
ll <- 0
# current data likelihood
for(s in 1:Sn){
et <- curr_tables$evt_table[[s]]
rt <- curr_tables$rt_table[[s]]
for(j in 1:n.intervals[s]){
ll <- ll + sum(et[,P+j]) * log(lambda[[s]][j]) - lambda[[s]][j] *
sum(exp(cbind(1,as.matrix(rt[,1:P]))%*% beta) * rt[,P+j])
}
et_sum <- rowSums(et[,(P+1):(P+n.intervals[s])])
ll <- ll + sum((cbind(1,as.matrix(et[,1:P])) %*% beta) * et_sum)
}
# historical data likelihood
if(length(hist_tables)!=0){
for(k in 1:length(hist_tables)){
histdata <- hist_tables[[k]]
a0 <- a0_vec[k]
for(s in 1:Sn){
et <- histdata$evt_table[[s]]
rt <- histdata$rt_table[[s]]
for(j in 1:n.intervals[s]){
ll <- ll + a0*(sum(et[,P+j]) * log(lambda[[s]][j]) - lambda[[s]][j] *
sum(exp(cbind(1,as.matrix(rt[,1:P]))%*% beta) * rt[,P+j]))
}
et_sum <- rowSums(et[,(P+1):(P+n.intervals[s])])
ll <- ll + a0*(sum(cbind(1,as.matrix(et[,1:P])) %*% beta * et_sum))
}
}
}
return(ll)
}
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
beta <- c(0.1747,0.3721)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
beta <- c(0.0747,0.3721)
# R
PE_ll(curr_tables=res$curr_tables, hist_tables=list(), 0)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/UNC/GRA/Project_BayesPPDSurv/BayesPPDSurv/src")
sourceCpp("PCH_fixed.cpp")
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=10000, nBI=250, dCurrent0=TRUE)
View(res_PP)
ncol(X)
sourceCpp("PCH_fixed.cpp")
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=10000, nBI=250, dCurrent0=TRUE)
View(res_PP)
sourceCpp("PCH_fixed.cpp")
sourceCpp("PCH_fixed.cpp")
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=1, nBI=0, dCurrent0=TRUE)
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = c(-100,10),upper_limits0 = c(100,10),slice_widths0 = c(0.1,10),
nMC=10, nBI=0, dCurrent0=TRUE)
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = rep(-100,10),upper_limits0 = rep(100,10),slice_widths0 = c(0.1,10),
nMC=10, nBI=0, dCurrent0=TRUE)
sourceCpp("PCH_fixed.cpp")
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = rep(-100,10),upper_limits0 = rep(100,10),slice_widths0 = c(0.1,10),
nMC=10, nBI=0, dCurrent0=TRUE)
View(res_PP)
set.seed(1)
res_PP <- pch_fixed_a0(curr_tables0=res$curr_tables, hist_tables0=res$hist_tables, a0_vec0=a0,
n_intervals0=n.intervals, lambda0=lambda, P0=ncol(X),
lower_limits0 = rep(-100,10),upper_limits0 = rep(100,10),slice_widths0 = c(0.1,10),
nMC=10000, nBI=250, dCurrent0=TRUE)
View(res_PP)
plot(density(res_PP[,1]))
plot(density(res_PP[,1]))
View(res_PP)
plot(density(res_PP[,1]))
res_PP[,1]
plot(density(res_PP[,1]))
