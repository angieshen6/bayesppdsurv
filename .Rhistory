setwd("~/Library/Mobile Documents/com~apple~CloudDocs/UNC/GRA/BayesPPD/src")
library(Rcpp)
sourceCpp("NI_fixed.cpp")
10+(535-44)*
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
historical <- matrix(0, ncol=3, nrow=2)
historical[1,] <- c(44, 535, 0.3)
historical[2,] <- c(33, 304, 0.3)
10+(535-44)*
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
sourceCpp("NI_fixed.cpp")
10+(535-44)*
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
10+(535-44)*
number <- two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
10+(535-44)*
number <- two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
sourceCpp("NI_fixed.cpp")
10+(535-44)*
number <- two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
number <- two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
number
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
10+(535-44)*
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
sourceCpp("NI_fixed.cpp")
sourceCpp("NI_fixed.cpp")
two_grp_fixed_a0("Bernoulli", 10, 400, historical,1,1)
10+44*0.3+33*0.3+1
400-10+(535-44)*0.3+(304-33)*0.3+1
data.type <- "Bernoulli"
y.c <- 70
n.c <- 100
# Simulate three historical datasets
historical <- matrix(0, ncol=2, nrow=3)
historical[1,] <- c(70, 100)
historical[2,] <- c(60, 100)
historical[3,] <- c(50, 100)
# Set parameters of the slice sampler
lower.limits <- rep(0, 3) # The dimension is the number of historical datasets
upper.limits <- rep(1, 3)
slice.widths <- rep(0.1, 3)
result <- two.grp.random.a0(data.type=data.type, y.c=y.c, n.c=n.c, historical=historical,
lower.limits=lower.limits, upper.limits=upper.limits,
slice.widths=slice.widths, nMC=10000, nBI=250)
document()
library(devtools)
load_all()
document()
build_manual()
document()
build_manual()
document()
build_manual()
document()
build_manual()
document()
build_manual()
document()
build_manual()
data.type <- "Bernoulli"
y.c <- 70
n.c <- 100
# Simulate three historical datasets
historical <- matrix(0, ncol=3, nrow=3)
historical[1,] <- c(70, 100, 0.3)
historical[2,] <- c(60, 100, 0.5)
historical[3,] <- c(50, 100, 0.7)
result <- two.grp.fixed.a0(data.type=data.type, y.c=y.c, n.c=n.c, historical=historical)
result
two_grp_fixed_a0("Bernoulli", 70, 100, historical,1,1)
document()
two_grp_fixed_a0("Bernoulli", 70, 100, historical,1,1)
build_manual()
historical <- matrix(0, ncol=3, nrow=2)
historical[1,] <- c(44, 535, 0.3)
historical[2,] <- c(33, 304, 0.3)
set.seed(1)
power <-
power.two.grp.fixed.a0(data.type="Bernoulli", n.t=750, n.c=round(750/3),
historical=historical,
samp.prior.mu.t=0.092, samp.prior.mu.c=0.092,
prior.mu.t.shape1=0.0001, prior.mu.t.shape2=0.0001,
prior.mu.c.shape1=0.0001,prior.mu.c.shape2=0.0001,
delta=0.041, N=10000)
power$`power/type I error`
set.seed(1)
lis <- c(750, 810, 900, 960, 1110)
results <- NULL
for(i in 1:length(lis)){
error <- power.two.grp.fixed.a0(data.type="Bernoulli", n.t=lis[i], n.c=round(lis[i]/3),
historical=historical,
samp.prior.mu.t=0.133, samp.prior.mu.c=0.092,
prior.mu.t.shape1=0.0001, prior.mu.t.shape2=0.0001,
prior.mu.c.shape1=0.0001,prior.mu.c.shape2=0.0001,
delta=0.041, N=10000)
res <- error$`power/type I error`
results <- c(results, res)
}
results
set.seed(1)
power <-
power.two.grp.random.a0(data.type="Bernoulli", n.t=750, n.c=round(750/3),
historical=historical,
samp.prior.mu.t=0.092, samp.prior.mu.c=0.092,
prior.mu.t.shape1=0.0001, prior.mu.t.shape2=0.0001,
prior.mu.c.shape1=0.0001,prior.mu.c.shape2=0.0001,
prior.a0.shape1=1,prior.a0.shape2=1,
lower.limits=rep(0, 10), upper.limits=rep(1, 10),
slice.widths=rep(0.1, 10), delta=0.041, gamma=0.95,
nMC=20000, nBI=250, N=10)
power$`power/type I error` # 0.864
set.seed(1)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
result <- glm.fixed.a0(data.type="Bernoulli", data.link="Logistic", y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colMeans(result)
data(actg019)
data(actg036)
Y0 <- actg019$outcome
X0 <- actg019[,-1]
X0$age_std <- scale(X0$age)
X0$T4_log <- log(X0$T4count)
X0 <- as.matrix(X0[,c("age_std","race","T4_log")])
Y <- actg036$outcome
X <- actg036[,-1]
X$age_std <- scale(X$age)
X$T4_log <- log(X$T4count)
X <- as.matrix(X[,c("treat","age_std","race","T4_log")])
set.seed(1)
result <- glm.fixed.a0(data.type="Bernoulli", data.link="Logistic", y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colMeans(result)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
set.seed(1)
result <- glm.fixed.a0(data.type="Bernoulli", data.link="Logistic", y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colMeans(result)
set.seed(1)
# Put historical data in a list of one list
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
result <- glm.fixed.a0(data.type="Bernoulli", data.link="Logistic", y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colMeans(result) # 4.8931870 -0.9459501  0.3645510  0.7201122 -1.4784046
set.seed(1)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
result <- glm.fixed.a0(data.type=data.type, data.link=data.link, y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colnames(result_05) <- c("b0","b1","b2","b3","b4")
data.type <- "Bernoulli"
data.link <- "Logistic"
set.seed(1)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
result <- glm.fixed.a0(data.type=data.type, data.link=data.link, y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colnames(result_05) <- c("b0","b1","b2","b3","b4")
result_05 <- glm.fixed.a0(data.type=data.type, data.link=data.link, y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colnames(result_05) <- c("b0","b1","b2","b3","b4")
colnames(result_05) <- c("b0","b1","b2","b3","b4")
colMeans(result_05)
set.seed(1)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
result_05 <- glm.fixed.a0(data.type=data.type, data.link=data.link, y=Y, x=X,
historical=historical, nMC=10000, nBI=250)
colnames(result_05) <- c("b0","b1","b2","b3","b4")
colMeans(result_05)
library(truncnorm)
# Generate sampling priors for parameters other than beta_1.
set.seed(1)
historical.sp <- list(list(y0=Y0, x0=X0, a0=1))
beta.sp <- glm.fixed.a0(data.type="Bernoulli", data.link="Logistic",
historical=historical.sp,
nMC=10000, nBI=250, current.data = FALSE)
nSP <- 10000
# The sampling prior is fixed at the posterior mean of the parameter given
# the historical data.
mat.sp <- matrix(rep(colMeans(beta.sp), each=nSP), nrow=nSP)
# Generate sampling priors for beta_1.
beta1.sp <- rtruncnorm(nSP, a=-2, b=-0.1, mean=-0.5)
samp.prior.beta <- cbind(mat.sp[,1], beta1.sp, mat.sp[,2:4])
set.seed(1)
sample.sizes <- c(800,1000,1200)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
results <- NULL
for(i in 1:length(sample.sizes)){
result <- power.glm.fixed.a0(data.type="Bernoulli", data.size=sample.sizes[i],
historical=historical,
samp.prior.beta=samp.prior.beta,
delta=0, gamma=0.95, approximate=TRUE, N=10000)
results <- c(results, result)
}
results
set.seed(1)
historical.sp <- list(list(y0=Y0, x0=X0, a0=1))
beta.sp <- glm.fixed.a0(data.type="Bernoulli", data.link="Logistic",
historical=historical.sp,
nMC=10000, nBI=250, current.data = FALSE)
nSP <- 10000
# The sampling prior is fixed at the posterior mean of the parameter given
# the historical data.
mat.sp <- matrix(rep(colMeans(beta.sp), each=nSP), nrow=nSP)
# Generate sampling priors for beta_1.
beta1.sp <- rtruncnorm(nSP, a=-2, b=-0.1, mean=-0.5)
samp.prior.beta <- cbind(mat.sp[,1], beta1.sp, mat.sp[,2:4])
View(samp.prior.beta)
set.seed(1)
# We experiment with sample sizes 800, 1000 and 1200.
sample.sizes <- c(700,1000,1300)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
results <- NULL
for(i in 1:length(sample.sizes)){
result <- power.glm.fixed.a0(data.type="Bernoulli", data.size=sample.sizes[i],
historical=historical,
samp.prior.beta=samp.prior.beta,
delta=0, gamma=0.95, approximate=TRUE, N=10000)
results <- c(results, result)
}
results
set.seed(1)
# We experiment with sample sizes 800, 1000 and 1200.
sample.sizes <- c(800,1000,1200)
historical <- list(list(y0=Y0, x0=X0, a0=0.5))
results <- NULL
for(i in 1:length(sample.sizes)){
result <- power.glm.fixed.a0(data.type="Bernoulli", data.size=sample.sizes[i],
historical=historical,
samp.prior.beta=samp.prior.beta,
delta=0, gamma=0.95, approximate=TRUE, N=10000)
results <- c(results, result)
}
results
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/UNC/GRA/JSS")
ss.list <- seq(from=750, to=1200, by=50)
list2 <- sort(rep(ss.list,10))
load("glm_a0=0.Rdata")
df <- data.frame(ss=list2, power0=powers)
load("glm_a0=05.Rdata")
df <- cbind(df, power05=powers)
load("glm_a0=1.Rdata")
df <- cbind(df, power1=powers)
load("glm_a0=r.Rdata")
df <- cbind(df, power_r=powers)
res <- df %>% group_by(ss) %>% summarise(p1=mean(power0),p2=mean(power05),
p3=mean(power1),p4=mean(power_r))
library(dplyr)
ss.list <- seq(from=750, to=1200, by=50)
list2 <- sort(rep(ss.list,10))
load("glm_a0=0.Rdata")
df <- data.frame(ss=list2, power0=powers)
load("glm_a0=05.Rdata")
df <- cbind(df, power05=powers)
load("glm_a0=1.Rdata")
df <- cbind(df, power1=powers)
load("glm_a0=r.Rdata")
df <- cbind(df, power_r=powers)
res <- df %>% group_by(ss) %>% summarise(p1=mean(power0),p2=mean(power05),
p3=mean(power1),p4=mean(power_r))
# generate table of powers
xtable(res,digits=3)
library(xtable)
# generate table of powers
xtable(res,digits=3)
# generate table of powers
xtable(res,digits=4)
grid <- matrix(seq(0.05,1,by=0.1))
historical <- list(list(y0=Y0, x0=X0))
a0_coef <- normalizing.constant(grid=grid, historical=historical,
data.type="Bernoulli", data.link="Logistic")
load_all()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/UNC/GRA/BayesPPD")
load_all()
load_all()
build()
load_all()
build()
load_all()
build()
4.6+48.77+15+3.95+1.75+37.24
111.31/5
42*4/5
42-33.6
22.262-8.4
18.47+4.29+3.04+6.11+129+33.9+15+35.24+18.63-245.98-17.09
1579.16-0.61
1578.55-38.72
1539.83/2
1539.83+162-50
1651.83/2
825.915-22.262
35+80+125
